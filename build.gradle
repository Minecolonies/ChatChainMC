buildscript {
    repositories {
        jcenter()
        maven {
            url = 'https://files.minecraftforge.net/maven'
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'io.franzbecker.gradle-lombok' version '1.12'
    id 'net.ltgt.apt' version '0.10'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: "net.minecraftforge.gradle"

group = modGroup
archivesBaseName = modBaseName
version = System.getenv()['BUILD_NUMBER'] != null ? System.getenv()['BUILD_NUMBER'] : System.getenv()['TRAVIS_BUILD_NUMBER']
mainClassName = 'co.chatchain.mc.forge.ChatChainMC'

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

repositories {
    mavenLocal()
    maven {
        name 'LDTTeam - Modding'
        url 'https://ldtteam.jfrog.io/ldtteam/modding/'
    }
    mavenCentral()
    jcenter()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.3-34.1.23'

    compile('org.jetbrains:annotations:15.0')

    compile('org.projectlombok:lombok:1.16.18')
    apt('org.projectlombok:lombok:1.16.18')

    //compile('ninja.leaping.configurate:configurate-core:3.3')

    compile 'co.chatchain:commons:42978'
    shadow 'co.chatchain:commons:42978'
}

minecraft {
    mappings channel: 'snapshot', version: '20200723-1.16.1'

    runs {
        client {
            workingDirectory project.file('runClient')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'info'

            mods {
                structurize {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('runServer')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'info'

            args 'nogui'

            mods {
                structurize {
                    source sourceSets.main
                }
            }
        }
    }
}

shadowJar {
    configurations = [project.configurations.shadow]

    exclude 'dummyThing'

    //relocate('com.typesafe.config', 'co.chatchain.typesafe.config')
    relocate('com.google', 'co.chatchain.google')
    relocate('javax.inject', 'co.chatchain.inject')
}

reobf {
    shadowJar {}
}

task setupDecompWorkspace {
    afterEvaluate {
        println "Setup"
    }
}

task setupCIWorkspace {
    afterEvaluate {
        println "Setup"
    }
}
