buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}

plugins {
    id 'io.franzbecker.gradle-lombok' version '1.12'
    id 'net.ltgt.apt' version '0.10'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "net.minecraftforge.gradle.forge"

group = modGroup
archivesBaseName = modBaseName
version = System.getenv()['BUILD_NUMBER'] != null ? System.getenv()['BUILD_NUMBER'] : System.getenv()['TRAVIS_BUILD_NUMBER']

sourceSets {
    api {
        java {
            srcDir 'src/api/java'
        }
    }
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
        compileClasspath += sourceSets.api.output
    }
}

minecraft {
    version = project.forgeVersion
    runDir = "run"

    mappings = project.mcpVersion
}

repositories {
    ivy {
        name 'Minecolonies TeamCity Repo'
        ivyPattern 'http://teamcity.minecolonies.com/guestAuth/repository/download/[module]/[revision]/teamcity-ivy.xml'
        artifactPattern 'http://teamcity.minecolonies.com/guestAuth/repository/download/[module]/[revision]/[artifact](.[ext])'
    }
    mavenCentral()
    jcenter()
    maven {
        name 'drnaylor'
        url 'http://repo.drnaylor.co.uk/artifactory/list/quickstart'
    }
}

dependencies {
    compile('org.jetbrains:annotations:15.0')

    compile('org.projectlombok:lombok:1.16.18')
    apt('org.projectlombok:lombok:1.16.18')

    compile('ninja.leaping.configurate:configurate-gson:3.3')

    compile('org.java-websocket:Java-WebSocket:1.3.4')

    //compile('com.google.inject:guice:4.0')

    //compile('uk.co.drnaylor:quickstart-moduleloader:0.8.2')
    //compile('io.github.lukehutch:fast-classpath-scanner')

    compile('org:ChatChain_ChatChainConnect_Branches:' + chatChainConnectVersion) {
        artifact {
            name = 'chatchainconnect-' + chatChainConnectVersion + '-all'
            type = 'jar'
        }
        artifact {
            name = 'chatchainconnect-' + chatChainConnectVersion + '-sources'
            type = 'jar'
        }
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        expand "version": project.version, "mcversion": project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

shadowJar {
    from sourceSets.api.output
    from sourceSets.main.output

    exclude 'dummyThing'

    exclude 'META-INF'
    relocate('com.typesafe.config', 'configurate.typesafe.config')
}

reobf {
    shadowJar {}
    apiJar {}
}

task apiJar(type: Jar) {
    from sourceSets.api.output
    classifier = 'api'
}
